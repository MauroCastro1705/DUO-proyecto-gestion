[gd_scene load_steps=10 format=3 uid="uid://dcrajy07ndiox"]

[ext_resource type="Texture2D" uid="uid://7dinfdusy8ew" path="res://assets/Background/concreto_02_shad.png" id="1_ptu22"]
[ext_resource type="Texture2D" uid="uid://dxxsk0qwxw6h0" path="res://assets/Background/CartelFechasConcreto.png" id="2_2qcf2"]
[ext_resource type="Texture2D" uid="uid://baamvpygesxms" path="res://assets/Background/neon_concreto_01.png" id="2_56ea1"]
[ext_resource type="Texture2D" uid="uid://bxbimkw4uxgvh" path="res://assets/Background/Poster120Segundos.png" id="3_jxfnm"]

[sub_resource type="Gradient" id="Gradient_ptu22"]
colors = PackedColorArray(1, 1, 1, 1, 0, 0, 0, 1)

[sub_resource type="GradientTexture2D" id="GradientTexture2D_56ea1"]
gradient = SubResource("Gradient_ptu22")
fill = 1
fill_from = Vector2(0.5, 0.5)
fill_to = Vector2(1, 0.5)

[sub_resource type="Gradient" id="Gradient_56ea1"]
interpolation_mode = 2
offsets = PackedFloat32Array(0, 0.336066, 1)
colors = PackedColorArray(1, 1, 1, 1, 0.576612, 0.576612, 0.576612, 1, 0, 0, 0, 1)

[sub_resource type="GradientTexture2D" id="GradientTexture2D_0cf4c"]
gradient = SubResource("Gradient_56ea1")
height = 42
fill = 1
fill_from = Vector2(0.521368, 0.491453)
fill_to = Vector2(1, 0.508547)

[sub_resource type="GDScript" id="GDScript_56ea1"]
script/source = "extends PointLight2D

@export var base_light_energy: float = 1.0 # The normal energy of the light when it's on
@export var min_time_between_glitches: float = 0.5 # Minimum time between glitches (seconds)
@export var max_time_between_glitches: float = 3.0 # Maximum time between glitches (seconds)
@export var min_glitch_off_duration: float = 0.05 # Minimum time the light stays off during a glitch (seconds)
@export var max_glitch_off_duration: float = 0.3  # Maximum time the light stays off during a glitch (seconds)
@export var glitch_chance: float = 0.8 # Probability (0.0 to 1.0) that a scheduled event is a glitch (vs. just a long \"on\" period)

var current_countdown: float = 0.0 # Time until the next potential glitch/state change
var is_off_glitching: bool = false # True if the light is currently off due to a glitch

func _ready():
	# VERY IMPORTANT: Seed the random number generator uniquely for EACH INSTANCE
	# This ensures that when this PointLight2D (and its scene) is instantiated multiple times,
	# each light glitches independently.
	seed(hash(str(get_instance_id())))
	
	# Set the light to its base energy initially
	energy = base_light_energy
	
	# Start the initial countdown to the first event
	_set_next_countdown_time(randf_range(min_time_between_glitches, max_time_between_glitches))

func _process(delta):
	# Decrease the countdown by delta time
	current_countdown -= delta
	
	# If countdown reaches zero or less, it's time for an event
	if current_countdown <= 0:
		_handle_light_event()

func _set_next_countdown_time(time_to_wait: float):
	# Sets the new countdown for the next event
	current_countdown = time_to_wait

func _handle_light_event():
	if is_off_glitching:
		# If it was off, turn it back on to base energy
		energy = base_light_energy
		is_off_glitching = false
		# Schedule the next \"on\" period before a potential new glitch
		_set_next_countdown_time(randf_range(min_time_between_glitches, max_time_between_glitches))
	else:
		# If it was on, decide whether to glitch or stay on
		if randf() < glitch_chance:
			# It's a glitch! Turn the light off
			energy = 0.0
			is_off_glitching = true
			# Schedule how long it stays off
			_set_next_countdown_time(randf_range(min_glitch_off_duration, max_glitch_off_duration))
			
			# Optional: Play a glitch sound or particle effect here
			# if $SomeSoundPlayer: $SomeSoundPlayer.play()
		else:
			# Not a glitch this time, just stay on and schedule the next check
			energy = base_light_energy # Ensure it's on, even if it was already on
			_set_next_countdown_time(randf_range(min_time_between_glitches, max_time_between_glitches))
"

[node name="Concreto" type="Node2D"]

[node name="concreto" type="Sprite2D" parent="."]
modulate = Color(0.459773, 0.603913, 0.578852, 1)
texture = ExtResource("1_ptu22")
offset = Vector2(0, -415)

[node name="CartelFechasConcreto" type="Sprite2D" parent="concreto"]
position = Vector2(434, -143)
rotation = 0.0375083
scale = Vector2(0.16, 0.16)
texture = ExtResource("2_2qcf2")

[node name="CartelFechasConcreto2" type="Sprite2D" parent="concreto"]
position = Vector2(-320, -110)
rotation = -0.0444844
scale = Vector2(0.16, 0.16)
texture = ExtResource("2_2qcf2")

[node name="Poster120Segundos" type="Sprite2D" parent="concreto"]
position = Vector2(-244, -138)
rotation = -0.0355019
scale = Vector2(0.221569, 0.221569)
texture = ExtResource("3_jxfnm")

[node name="luz_calle_2d" type="PointLight2D" parent="."]
position = Vector2(535, -495)
color = Color(0.4136, 0.88, 0.78672, 1)
energy = 2.71
shadow_enabled = true
texture = SubResource("GradientTexture2D_56ea1")
texture_scale = 16.11

[node name="NeonConcreto01" type="Sprite2D" parent="."]
light_mask = 1024
position = Vector2(-193, -380)
scale = Vector2(0.761719, 0.761719)
texture = ExtResource("2_56ea1")

[node name="luz_neon_2d" type="PointLight2D" parent="NeonConcreto01"]
position = Vector2(-3.93846, 2.62568)
color = Color(0.846845, 0.0234749, 5.77569e-07, 1)
energy = 4.95
texture = SubResource("GradientTexture2D_0cf4c")
texture_scale = 8.46
script = SubResource("GDScript_56ea1")
base_light_energy = 6.0
min_time_between_glitches = 0.03
max_time_between_glitches = 0.6
min_glitch_off_duration = 0.03
max_glitch_off_duration = 0.08
glitch_chance = 1.0
