[gd_scene load_steps=7 format=3 uid="uid://grdh8m8au6ev"]

[ext_resource type="Texture2D" uid="uid://b5d3h8fkeoaei" path="res://_m_chars_test/assets/cables_pelados/cable_pelado_00002.png" id="1_1i4wd"]
[ext_resource type="Texture2D" uid="uid://c7hrdx2y4o357" path="res://_m_chars_test/assets/cables_pelados/cable_pelado_00000.png" id="1_scdet"]

[sub_resource type="SpriteFrames" id="SpriteFrames_c6yvm"]
animations = [{
"frames": [{
"duration": 1.0,
"texture": ExtResource("1_scdet")
}, {
"duration": 1.0,
"texture": ExtResource("1_1i4wd")
}],
"loop": true,
"name": &"cable_pelado_chispa",
"speed": 15.0
}]

[sub_resource type="Gradient" id="Gradient_1i4wd"]
offsets = PackedFloat32Array(0.38, 1)
colors = PackedColorArray(1, 1, 1, 1, 0, 0, 0, 1)

[sub_resource type="GradientTexture2D" id="GradientTexture2D_scdet"]
gradient = SubResource("Gradient_1i4wd")
fill = 1
fill_from = Vector2(0.5, 0.5)
fill_to = Vector2(1, 0.508547)

[sub_resource type="GDScript" id="GDScript_1i4wd"]
script/source = "extends PointLight2D

@export var base_light_energy: float = 1.0 # The normal energy of the light when it's on
@export var min_time_between_glitches: float = 0.5 # Minimum time between glitches (seconds)
@export var max_time_between_glitches: float = 3.0 # Maximum time between glitches (seconds)
@export var min_glitch_off_duration: float = 0.05 # Minimum time the light stays off during a glitch (seconds)
@export var max_glitch_off_duration: float = 0.3  # Maximum time the light stays off during a glitch (seconds)
@export var glitch_chance: float = 0.8 # Probability (0.0 to 1.0) that a scheduled event is a glitch (vs. just a long \"on\" period)

var current_countdown: float = 0.0 # Time until the next potential glitch/state change
var is_off_glitching: bool = false # True if the light is currently off due to a glitch

func _ready():
	# VERY IMPORTANT: Seed the random number generator uniquely for EACH INSTANCE
	# This ensures that when this PointLight2D (and its scene) is instantiated multiple times,
	# each light glitches independently.
	seed(hash(str(get_instance_id())))
	
	# Set the light to its base energy initially
	energy = base_light_energy
	
	# Start the initial countdown to the first event
	_set_next_countdown_time(randf_range(min_time_between_glitches, max_time_between_glitches))

func _process(delta):
	# Decrease the countdown by delta time
	current_countdown -= delta
	
	# If countdown reaches zero or less, it's time for an event
	if current_countdown <= 0:
		_handle_light_event()

func _set_next_countdown_time(time_to_wait: float):
	# Sets the new countdown for the next event
	current_countdown = time_to_wait

func _handle_light_event():
	if is_off_glitching:
		# If it was off, turn it back on to base energy
		energy = 0.0
		is_off_glitching = false
		# Schedule the next \"on\" period before a potential new glitch
		_set_next_countdown_time(randf_range(min_time_between_glitches, max_time_between_glitches))
	else:
		# If it was on, decide whether to glitch or stay on
		if randf() < glitch_chance:
			# It's a glitch! Turn the light off
			energy = base_light_energy
			is_off_glitching = true
			# Schedule how long it stays off
			_set_next_countdown_time(randf_range(min_glitch_off_duration, max_glitch_off_duration))
			
			# Optional: Play a glitch sound or particle effect here
			# if $SomeSoundPlayer: $SomeSoundPlayer.play()
		else:
			# Not a glitch this time, just stay on and schedule the next check
			energy = base_light_energy # Ensure it's on, even if it was already on
			_set_next_countdown_time(randf_range(min_time_between_glitches, max_time_between_glitches))
"

[node name="cables_pelados" type="Node2D" groups=["activable"]]

[node name="ColorRect" type="ColorRect" parent="."]
visible = false
offset_left = -1028.0
offset_top = -1075.0
offset_right = 1272.0
offset_bottom = 874.0
color = Color(0.419813, 0.419813, 0.419813, 1)

[node name="AnimatedSprite2D" type="AnimatedSprite2D" parent="."]
modulate = Color(0.60933, 0.60933, 0.60933, 1)
position = Vector2(108, -68)
sprite_frames = SubResource("SpriteFrames_c6yvm")
animation = &"cable_pelado_chispa"
autoplay = "cable_pelado_chispa"
frame_progress = 0.860371

[node name="PointLight2D" type="PointLight2D" parent="."]
position = Vector2(108, -65)
scale = Vector2(2.53596, 2.53596)
color = Color(0.3456, 0.9088, 0.96, 1)
energy = 4.88
shadow_enabled = true
texture = SubResource("GradientTexture2D_scdet")
texture_scale = 10.08
script = SubResource("GDScript_1i4wd")
base_light_energy = 6.0
min_time_between_glitches = 2.0
max_time_between_glitches = 2.0
max_glitch_off_duration = 0.1
glitch_chance = 0.95
